{"ast":null,"code":"import axios from 'axios';\n\n// Define API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Define API service functions\nconst ApiService = {\n  // Articles\n  getArticles: async (params = {}) => {\n    try {\n      const response = await api.get('/articles/', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      return {\n        results: []\n      };\n    }\n  },\n  getArticle: async id => {\n    try {\n      const response = await api.get(`/articles/${id}/`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching article ${id}:`, error);\n      return null;\n    }\n  },\n  // Regions\n  getRegions: async () => {\n    try {\n      const response = await api.get('/regions/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching regions:', error);\n      return {\n        results: []\n      };\n    }\n  },\n  // Topics\n  getTopics: async () => {\n    try {\n      const response = await api.get('/topics/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n      return {\n        results: []\n      };\n    }\n  },\n  // Sources\n  getSources: async () => {\n    try {\n      const response = await api.get('/sources/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      return {\n        results: []\n      };\n    }\n  },\n  // User Posts\n  getUserPosts: async () => {\n    try {\n      const response = await api.get('/posts/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n      return {\n        results: []\n      };\n    }\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","ApiService","getArticles","params","response","get","data","error","console","results","getArticle","id","getRegions","getTopics","getSources","getUserPosts"],"sources":["/Users/willynilsson/Desktop/Setup GladStart Script/gladstart/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Define API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Define API service functions\nconst ApiService = {\n  // Articles\n  getArticles: async (params = {}) => {\n    try {\n      const response = await api.get('/articles/', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      return { results: [] };\n    }\n  },\n  \n  getArticle: async (id) => {\n    try {\n      const response = await api.get(`/articles/${id}/`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching article ${id}:`, error);\n      return null;\n    }\n  },\n  \n  // Regions\n  getRegions: async () => {\n    try {\n      const response = await api.get('/regions/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching regions:', error);\n      return { results: [] };\n    }\n  },\n  \n  // Topics\n  getTopics: async () => {\n    try {\n      const response = await api.get('/topics/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n      return { results: [] };\n    }\n  },\n  \n  // Sources\n  getSources: async () => {\n    try {\n      const response = await api.get('/sources/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      return { results: [] };\n    }\n  },\n  \n  // User Posts\n  getUserPosts: async () => {\n    try {\n      const response = await api.get('/posts/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n      return { results: [] };\n    }\n  },\n};\n\nexport default ApiService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,UAAU,GAAG;EACjB;EACAC,WAAW,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,YAAY,EAAE;QAAEF;MAAO,CAAC,CAAC;MACxD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB;EACF,CAAC;EAEDC,UAAU,EAAE,MAAOC,EAAE,IAAK;IACxB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,aAAaM,EAAE,GAAG,CAAC;MAClD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BI,EAAE,GAAG,EAAEJ,KAAK,CAAC;MACrD,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACAK,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB;EACF,CAAC;EAED;EACAI,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB;EACF,CAAC;EAED;EACAK,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB;EACF,CAAC;EAED;EACAM,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC;MACzC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB;EACF;AACF,CAAC;AAED,eAAeR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}