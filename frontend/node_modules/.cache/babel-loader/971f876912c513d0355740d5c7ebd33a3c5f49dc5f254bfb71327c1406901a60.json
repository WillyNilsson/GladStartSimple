{"ast":null,"code":"var _jsxFileName = \"/Users/willynilsson/Desktop/Setup GladStart Script/gladstart/frontend/src/components/features/LazyImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt,\n  className,\n  style = {}\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: imgRef,\n    className: `lazy-image-container ${className || ''}`,\n    style: style,\n    children: [isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src || '/placeholder.svg',\n      alt: alt,\n      className: \"lazy-image\",\n      style: {\n        opacity: isLoaded ? 1 : 0\n      },\n      onLoad: () => setIsLoaded(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), (!isInView || !isLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lazy-image-loader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lazy-image-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LazyImage, \"7STQihRwUCq0eGnHwGKAY7M3ZyM=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LazyImage","src","alt","className","style","_s","isLoaded","setIsLoaded","isInView","setIsInView","imgRef","observer","IntersectionObserver","entries","isIntersecting","disconnect","threshold","current","observe","ref","children","opacity","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/willynilsson/Desktop/Setup GladStart Script/gladstart/frontend/src/components/features/LazyImage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst LazyImage = ({ src, alt, className, style = {} }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <div\n      ref={imgRef}\n      className={`lazy-image-container ${className || ''}`}\n      style={style}\n    >\n      {isInView && (\n        <img\n          src={src || '/placeholder.svg'}\n          alt={alt}\n          className=\"lazy-image\"\n          style={{ opacity: isLoaded ? 1 : 0 }}\n          onLoad={() => setIsLoaded(true)}\n        />\n      )}\n      {(!isInView || !isLoaded) && (\n        <div className=\"lazy-image-loader\">\n          <div className=\"lazy-image-spinner\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC,SAAS;EAAEC,KAAK,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMe,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC7BL,WAAW,CAAC,IAAI,CAAC;QACjBE,QAAQ,CAACI,UAAU,CAAC,CAAC;MACvB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,IAAIN,MAAM,CAACO,OAAO,EAAE;MAClBN,QAAQ,CAACO,OAAO,CAACR,MAAM,CAACO,OAAO,CAAC;IAClC;IAEA,OAAO,MAAM;MACXN,QAAQ,CAACI,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IACEoB,GAAG,EAAET,MAAO;IACZP,SAAS,EAAE,wBAAwBA,SAAS,IAAI,EAAE,EAAG;IACrDC,KAAK,EAAEA,KAAM;IAAAgB,QAAA,GAEZZ,QAAQ,iBACPT,OAAA;MACEE,GAAG,EAAEA,GAAG,IAAI,kBAAmB;MAC/BC,GAAG,EAAEA,GAAI;MACTC,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAE;QAAEiB,OAAO,EAAEf,QAAQ,GAAG,CAAC,GAAG;MAAE,CAAE;MACrCgB,MAAM,EAAEA,CAAA,KAAMf,WAAW,CAAC,IAAI;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACF,EACA,CAAC,CAAClB,QAAQ,IAAI,CAACF,QAAQ,kBACtBP,OAAA;MAAKI,SAAS,EAAC,mBAAmB;MAAAiB,QAAA,eAChCrB,OAAA;QAAKI,SAAS,EAAC;MAAoB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/CIL,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}